用于定义数据类型的关键字
class （类）
interface （接口）
byte （字节型）
short（ 短整型）
int （整型）
long（ 长整型）
float （单精度浮点型）
double ( 双精度浮点型）
char （字符型）
boolean （布尔型）
void （声明当前成员方法没有返回值）

用于定义数据类型值的关键字
true （关系运算的返回类型）
false （关系运算的返回类型）
null（ 空）

用于定义流程控制的关键字
if （条件语句的引导词）
else （ 用在条件语句中，当条件不成立时的分支）
switch （ 分支语句结构的引导词）
case （用在switch语句之中，表示其中的一个分支）
default （默认，例如，用在switch语句中，表明一个默认的分支）
while （循环语句）
do （用在do-while循环结构中）
for （一种循环结构的引导词）
break （中断当前循环）
continue（ 回到一个块的开始处）
return （ 从成员方法中返回数据）

用于定义访问权限修饰符的关键字
private （一种访问控制方式：私用模式）
protected （一种访问控制方式：保护模式）
public（一种访问控制方式：共用模式）

用于定义类，函数，变量修饰符的关键字
abstract （ 表明类或者成员方法具有抽象属性）
final （用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变）
static （表明具有静态属性）
synchronized（表明一段代码需要同步执行）

用于定义类与类之间关系的关键字
extends （ 表明一个类型是另一个类型的子类型，这里常见的类型有类和接口）
implements（表明一个类实现了给定的接口）

用于定义建立实例及引用实例，判断实例的关键字
new （用来创建新实例对象）
this （指向当前实例对象的引用）
super （表明当前对象的父类型的引用或者父类型的构造方法）
instanceof（用来测试一个对象是否是指定类型的实例对象）

用于异常处理的关键字
try （ 尝试一个可能抛出异常的程序块）
catch （用在异常处理中，用来捕捉异常）
finally （用于处理异常情况，用来声明一个基本肯定会被执行到的语句块）
throw （ 抛出一个异常）
throws（声明在当前定义的成员方法中所有需要抛出的异常）

用于包的关键字
package （包）
import（表明要访问指定的类或包）

其他修饰符关键字
native （用来声明一个方法是由与计算机相关的语言（如C/C++/FORTRAN语言）实现的）
strictfp （用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范）
transient （ 声明不用序列化的成员域）
volatile （ 表明两个或者多个变量必须同步地发生变化）
assert（用来进行程序调试）
